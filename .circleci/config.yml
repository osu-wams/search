# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.3
  aws-cli: circleci/aws-cli@0.1.13

executors:
  node-executor:
    docker:
      - image: circleci/node:10.15.3
    working_directory: ~/project

jobs:
  install:
    executor: node-executor
    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - persist_to_workspace:
          root: /home/circleci
          paths: project

  lint-test-coverage:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Run Tests
          command: yarn run test

      - persist_to_workspace:
          root: /home/circleci
          paths: project

  build: &build
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Build Client
          command: yarn run build

      - persist_to_workspace:
          root: /home/circleci
          paths: project/build

  build-dev:
    <<: *build
  build-prod:
    <<: *build

  deploy: &deploy
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: ~/

      - aws-s3/sync:
          from: ~/project/build
          to: ${AWS_S3_BUCKET_URL}

  deploy-dev:
    <<: *deploy
  deploy-prod:
    <<: *deploy

  flush-cache: &flush-cache
    executor: aws-cli/default
    steps:
      - aws-cli/install
      - aws-cli/configure
      - run:
          name: Invalidate Index
          command: aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID} --paths /index.html

  flush-cache-dev:
    <<: *flush-cache
  flush-cache-prod:
    <<: *flush-cache

workflows:
  build_test_deploy:
    jobs:
      - install
      - lint-test-coverage:
          requires:
            - install

      - build-dev:
          requires:
            - lint-test-coverage
          context: search-dev
          filters:
            branches:
              ignore:
                - master
      - deploy-dev:
          requires:
            - build-dev
          context: search-dev
          filters:
            branches:
              ignore:
                - master
      - flush-cache-dev:
          requires:
            - deploy-dev
          context: search-dev
          filters:
            branches:
              ignore:
                - master

      - build-prod:
          requires:
            - lint-test-coverage
          context: search-prod
          filters:
            branches:
              only:
                - master
      - deploy-prod:
          requires:
            - build-prod
          context: search-prod
          filters:
            branches:
              only:
                - master
      - flush-cache-prod:
          requires:
            - deploy-prod
          context: search-prod
          filters:
            branches:
              only:
                - master
